########## Configuration ##########
data_source  :  real_world
setup_chosen  :  {'phase1': {'A'}}
mode  :  classification
data_mode  :  combined_data
selection  :  most important
approach  :  PCA+clf
clf  :  Assembly
kernels  :  ['linear', 'poly', 'rbf', 'sigmoid']
gammas  :  ['scale']
degrees  :  [1, 2, 3, 4, 5, 6]
neighbours  :  [1, 2, 3, 4, 5]
weights  :  ['uniform', 'distance']
classifier_combos  :  general
components  :  0.99
disaggregation algorithm  :  [NN, LR]
Training data found
Pretrained Network used
Load data for the grid PNDC_ERIGrid_phase1
0 element names changed to match UTF-8 format
Data loaded with sampling of None
C:\Users\FellnerD\Desktop\Dissertation\Inhaltliches\Code\Malfunctions-in-LV-grid-dataset\load_estimation\neurallelf\neurallelf\data\dataset_generators.py:98: DtypeWarning: Columns (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(data_path / directory / name)
Deleted Rows: 0
Grid: training_data
	Scenario: [4, 5, 6, 7]
C:\Users\FellnerD\Desktop\Dissertation\Inhaltliches\Code\Malfunctions-in-LV-grid-dataset\load_estimation\neurallelf\neurallelf\models\load_flow.py:362: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.
  df_avg = df.groupby(level=0).mean()
2023-01-18 11:44:29.062447: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-01-18 11:44:29.063456: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.
C:\ProgramData\Anaconda3\envs\neurallelf\lib\site-packages\sklearn\linear_model\_base.py:141: FutureWarning: 'normalize' was deprecated in version 1.0 and will be removed in 1.2.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:
from sklearn.pipeline import make_pipeline
model = make_pipeline(StandardScaler(with_mean=False), LinearRegression())
If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:
kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)
  warnings.warn(
2813/2813 [==============================] - 5s 2ms/step
2813/2813 [==============================] - 5s 2ms/step
2813/2813 [==============================] - 5s 2ms/step

-----------------------------------------------------------
Data estimated with NN used to generate malicious samples
mode: correct_vs_wrong
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_wrong of trafo_point_phase1 in setup B
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.43 (+/- 0.34)
Recall: 0.87 (+/- 0.68)
FScore: 0.58 (+/- 0.45)
Pred_vs_Test: [([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.47 (+/- 0.57)
Recall: 0.80 (+/- 0.80)
FScore: 0.58 (+/- 0.62)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.40 (+/- 0.65)
Recall: 0.67 (+/- 0.94)
FScore: 0.49 (+/- 0.72)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.33 (+/- 0.70)
Recall: 0.53 (+/- 1.00)
FScore: 0.40 (+/- 0.78)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.17 (+/- 0.47)
Recall: 0.33 (+/- 0.94)
FScore: 0.22 (+/- 0.63)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.20 (+/- 0.49)
Recall: 0.40 (+/- 0.98)
FScore: 0.27 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.17 (+/- 0.47)
Recall: 0.33 (+/- 0.94)
FScore: 0.22 (+/- 0.63)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.07 (+/- 0.34)
Recall: 0.13 (+/- 0.68)
FScore: 0.09 (+/- 0.45)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.50 (+/- 0.63)
Recall: 0.80 (+/- 0.80)
FScore: 0.60 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.47 (+/- 0.44)
Recall: 0.87 (+/- 0.68)
FScore: 0.60 (+/- 0.50)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.43 (+/- 0.50)
Recall: 0.80 (+/- 0.80)
FScore: 0.56 (+/- 0.58)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
mode: correct_vs_inversed
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_inversed of trafo_point_phase1 in setup B
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.57 (+/- 0.50)
Recall: 0.93 (+/- 0.50)
FScore: 0.69 (+/- 0.45)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.47 (+/- 0.68)
Recall: 0.73 (+/- 0.88)
FScore: 0.56 (+/- 0.72)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.50 (+/- 0.73)
Recall: 0.73 (+/- 0.88)
FScore: 0.58 (+/- 0.75)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.47 (+/- 0.77)
Recall: 0.67 (+/- 0.94)
FScore: 0.53 (+/- 0.80)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.53 (+/- 0.68)
Recall: 0.80 (+/- 0.80)
FScore: 0.62 (+/- 0.68)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.33 (+/- 0.79)
Recall: 0.47 (+/- 1.00)
FScore: 0.38 (+/- 0.84)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.40 (+/- 0.75)
Recall: 0.60 (+/- 0.98)
FScore: 0.47 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.47 (+/- 0.44)
Precision: 0.40 (+/- 0.54)
Recall: 0.73 (+/- 0.88)
FScore: 0.51 (+/- 0.64)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.43 (+/- 0.34)
Precision: 0.10 (+/- 0.40)
Recall: 0.20 (+/- 0.80)
FScore: 0.13 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.63 (+/- 0.44)
Recall: 1.00 (+/- 0.00)
FScore: 0.76 (+/- 0.29)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.63 (+/- 0.44)
Recall: 1.00 (+/- 0.00)
FScore: 0.76 (+/- 0.29)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.70 (+/- 0.49)
Precision: 0.67 (+/- 0.60)
Recall: 0.93 (+/- 0.50)
FScore: 0.76 (+/- 0.51)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.63 (+/- 0.44)
Recall: 1.00 (+/- 0.00)
FScore: 0.76 (+/- 0.29)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.47 (+/- 0.44)
Recall: 0.87 (+/- 0.68)
FScore: 0.60 (+/- 0.50)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
mode: correct_vs_abnormal
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_abnormal of trafo_point_phase1 in setup B
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.58 (+/- 0.45)
Precision: 0.58 (+/- 0.45)
Recall: 0.87 (+/- 0.68)
FScore: 0.69 (+/- 0.54)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.62 (+/- 0.33)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.60 (+/- 0.36)
Precision: 0.61 (+/- 0.34)
Recall: 0.90 (+/- 0.54)
FScore: 0.73 (+/- 0.42)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.51 (+/- 0.41)
Precision: 0.37 (+/- 0.71)
Recall: 0.50 (+/- 0.97)
FScore: 0.42 (+/- 0.81)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.24)
Precision: 0.67 (+/- 0.42)
Recall: 0.90 (+/- 0.54)
FScore: 0.75 (+/- 0.42)
Pred_vs_Test: [([0, 0, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.36)
Precision: 0.61 (+/- 0.34)
Recall: 0.90 (+/- 0.54)
FScore: 0.73 (+/- 0.42)
Pred_vs_Test: [([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.64 (+/- 0.38)
Precision: 0.64 (+/- 0.38)
Recall: 0.93 (+/- 0.50)
FScore: 0.76 (+/- 0.42)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
Creating data using the grid PNDC_ERIGrid_phase1
0 element names changed to match UTF-8 format

-----------------------------------------------------------
Data estimated with LR used to generate malicious samples
mode: correct_vs_wrong
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_wrong of trafo_point_phase1 in setup B
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.43 (+/- 0.34)
Recall: 0.87 (+/- 0.68)
FScore: 0.58 (+/- 0.45)
Pred_vs_Test: [([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.47 (+/- 0.57)
Recall: 0.80 (+/- 0.80)
FScore: 0.58 (+/- 0.62)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.40 (+/- 0.65)
Recall: 0.67 (+/- 0.94)
FScore: 0.49 (+/- 0.72)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.33 (+/- 0.70)
Recall: 0.53 (+/- 1.00)
FScore: 0.40 (+/- 0.78)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.17 (+/- 0.47)
Recall: 0.33 (+/- 0.94)
FScore: 0.22 (+/- 0.63)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.20 (+/- 0.49)
Recall: 0.40 (+/- 0.98)
FScore: 0.27 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.17 (+/- 0.47)
Recall: 0.33 (+/- 0.94)
FScore: 0.22 (+/- 0.63)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.07 (+/- 0.34)
Recall: 0.13 (+/- 0.68)
FScore: 0.09 (+/- 0.45)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.50 (+/- 0.63)
Recall: 0.80 (+/- 0.80)
FScore: 0.60 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.47 (+/- 0.44)
Recall: 0.87 (+/- 0.68)
FScore: 0.60 (+/- 0.50)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.43 (+/- 0.50)
Recall: 0.80 (+/- 0.80)
FScore: 0.56 (+/- 0.58)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
mode: correct_vs_inversed
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_inversed of trafo_point_phase1 in setup B
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.57 (+/- 0.50)
Recall: 0.93 (+/- 0.50)
FScore: 0.69 (+/- 0.45)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.47 (+/- 0.68)
Recall: 0.73 (+/- 0.88)
FScore: 0.56 (+/- 0.72)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.50 (+/- 0.73)
Recall: 0.73 (+/- 0.88)
FScore: 0.58 (+/- 0.75)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.47 (+/- 0.77)
Recall: 0.67 (+/- 0.94)
FScore: 0.53 (+/- 0.80)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.53 (+/- 0.68)
Recall: 0.80 (+/- 0.80)
FScore: 0.62 (+/- 0.68)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.33 (+/- 0.79)
Recall: 0.47 (+/- 1.00)
FScore: 0.38 (+/- 0.84)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.40 (+/- 0.75)
Recall: 0.60 (+/- 0.98)
FScore: 0.47 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.47 (+/- 0.44)
Precision: 0.40 (+/- 0.54)
Recall: 0.73 (+/- 0.88)
FScore: 0.51 (+/- 0.64)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.43 (+/- 0.34)
Precision: 0.10 (+/- 0.40)
Recall: 0.20 (+/- 0.80)
FScore: 0.13 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.63 (+/- 0.44)
Recall: 1.00 (+/- 0.00)
FScore: 0.76 (+/- 0.29)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.63 (+/- 0.44)
Recall: 1.00 (+/- 0.00)
FScore: 0.76 (+/- 0.29)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.70 (+/- 0.49)
Precision: 0.67 (+/- 0.60)
Recall: 0.93 (+/- 0.50)
FScore: 0.76 (+/- 0.51)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.63 (+/- 0.44)
Recall: 1.00 (+/- 0.00)
FScore: 0.76 (+/- 0.29)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.47 (+/- 0.44)
Recall: 0.87 (+/- 0.68)
FScore: 0.60 (+/- 0.50)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]

mode: correct_vs_abnormal
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created

Results for correct_vs_abnormal of trafo_point_phase1 in setup B

########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.58 (+/- 0.45)
Precision: 0.58 (+/- 0.45)
Recall: 0.87 (+/- 0.68)
FScore: 0.69 (+/- 0.54)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.62 (+/- 0.33)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.60 (+/- 0.36)
Precision: 0.61 (+/- 0.34)
Recall: 0.90 (+/- 0.54)
FScore: 0.73 (+/- 0.42)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]

########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.51 (+/- 0.41)
Precision: 0.37 (+/- 0.71)
Recall: 0.50 (+/- 0.97)
FScore: 0.42 (+/- 0.81)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]

########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.24)
Precision: 0.67 (+/- 0.42)
Recall: 0.90 (+/- 0.54)
FScore: 0.75 (+/- 0.42)
Pred_vs_Test: [([0, 0, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.36)
Precision: 0.61 (+/- 0.34)
Recall: 0.90 (+/- 0.54)
FScore: 0.73 (+/- 0.42)
Pred_vs_Test: [([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.50)
Precision: 0.60 (+/- 0.50)
Recall: 0.87 (+/- 0.68)
FScore: 0.71 (+/- 0.56)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]