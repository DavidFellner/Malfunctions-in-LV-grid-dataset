Data estimated with NN used to generate malicious samples
mode: correct_vs_wrong
Data loaded with sampling of None
Data loaded with sampling of None
Backend QtAgg is interactive backend. Turning interactive mode on.
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_wrong of trafo_point_phase1 in setup A
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.43 (+/- 0.34)
Recall: 0.87 (+/- 0.68)
FScore: 0.58 (+/- 0.45)
Pred_vs_Test: [([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.40 (+/- 0.54)
Recall: 0.73 (+/- 0.88)
FScore: 0.51 (+/- 0.64)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.37 (+/- 0.57)
Recall: 0.67 (+/- 0.94)
FScore: 0.47 (+/- 0.68)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.40 (+/- 0.65)
Recall: 0.67 (+/- 0.94)
FScore: 0.49 (+/- 0.72)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.30 (+/- 0.71)
Recall: 0.47 (+/- 1.00)
FScore: 0.36 (+/- 0.79)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.27 (+/- 0.62)
Recall: 0.47 (+/- 1.00)
FScore: 0.33 (+/- 0.73)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
scores
PyDev console: starting.
[[0.5, (0.0, 0.0, 0.0, None), ([0, 0], [0, 1])], [0.5, (0.0, 0.0, 0.0, None), ([0, 0], [0, 1])], [0.5, (0.5, 1.0, 0.6666666666666666, None), ([1, 1], [0, 1])], [0.5, (0.0, 0.0, 0.0, None), ([0, 0], [0, 1])], [0.5, (0.0, 0.0, 0.0, None), ([0, 0], [0, 1])], [0.5, (0.5, 1.0, 0.6666666666666666, None), ([1, 1], [0, 1])], [0.5, (0.5, 1.0, 0.6666666666666666, None), ([1, 1], [0, 1])], [0.5, (0.5, 1.0, 0.6666666666666666, None), ([1, 1], [0, 1])], [0.5, (0.0, 0.0, 0.0, None), ([0, 0], [0, 1])], [0.5, (0.5, 1.0, 0.6666666666666666, None), ([1, 1], [0, 1])], [0.5, (0.5, 1.0, 0.6666666666666666, None), ([1, 1], [0, 1])], [0.5, (0.0, 0.0, 0.0, None), ([0, 0], [0, 1])]]
len(score)
3
len(scores)
14
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.30 (+/- 0.49)
Recall: 0.60 (+/- 0.98)
FScore: 0.40 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.10 (+/- 0.40)
Recall: 0.20 (+/- 0.80)
FScore: 0.13 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.50 (+/- 0.63)
Recall: 0.80 (+/- 0.80)
FScore: 0.60 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.27 (+/- 0.88)
Recall: 0.27 (+/- 0.88)
FScore: 0.27 (+/- 0.88)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.27 (+/- 0.88)
Recall: 0.27 (+/- 0.88)
FScore: 0.27 (+/- 0.88)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
mode: correct_vs_inversed
Data loaded with sampling of None
Data loaded with sampling of None
C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.2\plugins\python-ce\helpers\pydev\_pydevd_bundle\pydevd_utils.py:606: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in s.iteritems():
combo
'10'
C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.2\plugins\python-ce\helpers\pydev\_pydevd_bundle\pydevd_utils.py:606: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in s.iteritems():
C:\Program Files\JetBrains\PyCharm Community Edition 2021.2.2\plugins\python-ce\helpers\pydev\_pydevd_bundle\pydevd_utils.py:606: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in s.iteritems():
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_inversed of trafo_point_phase1 in setup A
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.52)
Precision: 0.43 (+/- 0.62)
Recall: 0.73 (+/- 0.88)
FScore: 0.53 (+/- 0.68)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.47 (+/- 0.57)
Recall: 0.80 (+/- 0.80)
FScore: 0.58 (+/- 0.62)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.43 (+/- 0.62)
Recall: 0.73 (+/- 0.88)
FScore: 0.53 (+/- 0.68)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.40 (+/- 0.65)
Recall: 0.67 (+/- 0.94)
FScore: 0.49 (+/- 0.72)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.43 (+/- 0.72)
Recall: 0.67 (+/- 0.94)
FScore: 0.51 (+/- 0.76)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.67 (+/- 0.47)
Precision: 0.60 (+/- 0.65)
Recall: 0.87 (+/- 0.68)
FScore: 0.69 (+/- 0.62)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.37 (+/- 0.85)
Recall: 0.47 (+/- 1.00)
FScore: 0.40 (+/- 0.88)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.40 (+/- 0.75)
Recall: 0.60 (+/- 0.98)
FScore: 0.47 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.37 (+/- 0.44)
Recall: 0.73 (+/- 0.88)
FScore: 0.49 (+/- 0.59)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.10 (+/- 0.40)
Recall: 0.20 (+/- 0.80)
FScore: 0.13 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.70 (+/- 0.49)
Precision: 0.70 (+/- 0.49)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.33)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
mode: correct_vs_abnormal
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_abnormal of trafo_point_phase1 in setup A
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.64 (+/- 0.38)
Precision: 0.58 (+/- 0.62)
Recall: 0.80 (+/- 0.80)
FScore: 0.67 (+/- 0.68)
Pred_vs_Test: [([0, 0, 0], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.58 (+/- 0.45)
Precision: 0.58 (+/- 0.45)
Recall: 0.87 (+/- 0.68)
FScore: 0.69 (+/- 0.54)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.62 (+/- 0.33)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.60 (+/- 0.36)
Precision: 0.61 (+/- 0.34)
Recall: 0.90 (+/- 0.54)
FScore: 0.73 (+/- 0.42)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.51 (+/- 0.33)
Precision: 0.36 (+/- 0.67)
Recall: 0.53 (+/- 1.00)
FScore: 0.43 (+/- 0.80)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.47 (+/- 0.33)
Precision: 0.29 (+/- 0.72)
Recall: 0.37 (+/- 0.93)
FScore: 0.31 (+/- 0.76)
Pred_vs_Test: [([0, 0, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.42)
Precision: 0.67 (+/- 0.42)
Recall: 0.93 (+/- 0.50)
FScore: 0.77 (+/- 0.43)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.62 (+/- 0.33)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.36)
Precision: 0.60 (+/- 0.50)
Recall: 0.83 (+/- 0.70)
FScore: 0.68 (+/- 0.54)
Pred_vs_Test: [([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
Data estimated with LR used to generate malicious samples
mode: correct_vs_wrong
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_wrong of trafo_point_phase1 in setup A
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.43 (+/- 0.34)
Recall: 0.87 (+/- 0.68)
FScore: 0.58 (+/- 0.45)
Pred_vs_Test: [([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.40 (+/- 0.54)
Recall: 0.73 (+/- 0.88)
FScore: 0.51 (+/- 0.64)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.37 (+/- 0.57)
Recall: 0.67 (+/- 0.94)
FScore: 0.47 (+/- 0.68)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.40 (+/- 0.65)
Recall: 0.67 (+/- 0.94)
FScore: 0.49 (+/- 0.72)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.33 (+/- 0.60)
Recall: 0.60 (+/- 0.98)
FScore: 0.42 (+/- 0.71)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.30 (+/- 0.71)
Recall: 0.47 (+/- 1.00)
FScore: 0.36 (+/- 0.79)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.27 (+/- 0.62)
Recall: 0.47 (+/- 1.00)
FScore: 0.33 (+/- 0.73)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.30 (+/- 0.49)
Recall: 0.60 (+/- 0.98)
FScore: 0.40 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.10 (+/- 0.40)
Recall: 0.20 (+/- 0.80)
FScore: 0.13 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.50 (+/- 0.63)
Recall: 0.80 (+/- 0.80)
FScore: 0.60 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.27 (+/- 0.88)
Recall: 0.27 (+/- 0.88)
FScore: 0.27 (+/- 0.88)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.54)
Precision: 0.27 (+/- 0.88)
Recall: 0.27 (+/- 0.88)
FScore: 0.27 (+/- 0.88)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
mode: correct_vs_inversed
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_inversed of trafo_point_phase1 in setup A
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.52)
Precision: 0.43 (+/- 0.62)
Recall: 0.73 (+/- 0.88)
FScore: 0.53 (+/- 0.68)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.47 (+/- 0.57)
Recall: 0.80 (+/- 0.80)
FScore: 0.58 (+/- 0.62)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.43 (+/- 0.62)
Recall: 0.73 (+/- 0.88)
FScore: 0.53 (+/- 0.68)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.53 (+/- 0.44)
Precision: 0.40 (+/- 0.65)
Recall: 0.67 (+/- 0.94)
FScore: 0.49 (+/- 0.72)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.43 (+/- 0.72)
Recall: 0.67 (+/- 0.94)
FScore: 0.51 (+/- 0.76)
Pred_vs_Test: [([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.67 (+/- 0.47)
Precision: 0.60 (+/- 0.65)
Recall: 0.87 (+/- 0.68)
FScore: 0.69 (+/- 0.62)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.63 (+/- 0.44)
Precision: 0.37 (+/- 0.85)
Recall: 0.47 (+/- 1.00)
FScore: 0.40 (+/- 0.88)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.40 (+/- 0.75)
Recall: 0.60 (+/- 0.98)
FScore: 0.47 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.37 (+/- 0.44)
Recall: 0.73 (+/- 0.88)
FScore: 0.49 (+/- 0.59)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.10 (+/- 0.40)
Recall: 0.20 (+/- 0.80)
FScore: 0.13 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.70 (+/- 0.49)
Precision: 0.70 (+/- 0.49)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.33)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.20 (+/- 0.80)
Recall: 0.20 (+/- 0.80)
FScore: 0.20 (+/- 0.80)
Pred_vs_Test: [([0, 0], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1]), ([0, 0], [0, 1])]
mode: correct_vs_abnormal
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_abnormal of trafo_point_phase1 in setup A
########## Metrics for {'NuSVM': {'poly': [1]}} classifier ##########
Accuracy: 0.64 (+/- 0.38)
Precision: 0.58 (+/- 0.62)
Recall: 0.80 (+/- 0.80)
FScore: 0.67 (+/- 0.68)
Pred_vs_Test: [([0, 0, 0], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [2]}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [3]}} classifier ##########
Accuracy: 0.58 (+/- 0.45)
Precision: 0.58 (+/- 0.45)
Recall: 0.87 (+/- 0.68)
FScore: 0.69 (+/- 0.54)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [5]}} classifier ##########
Accuracy: 0.62 (+/- 0.33)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [1]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [2]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [3]}} classifier ##########
Accuracy: 0.60 (+/- 0.36)
Precision: 0.61 (+/- 0.34)
Recall: 0.90 (+/- 0.54)
FScore: 0.73 (+/- 0.42)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [4]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [5]}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'poly': [6]}} classifier ##########
Accuracy: 0.64 (+/- 0.17)
Precision: 0.62 (+/- 0.33)
Recall: 0.93 (+/- 0.50)
FScore: 0.75 (+/- 0.40)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'rbf': []}} classifier ##########
Accuracy: 0.69 (+/- 0.17)
Precision: 0.69 (+/- 0.17)
Recall: 1.00 (+/- 0.00)
FScore: 0.81 (+/- 0.10)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'NuSVM': {'linear': []}} classifier ##########
Accuracy: 0.51 (+/- 0.33)
Precision: 0.36 (+/- 0.67)
Recall: 0.53 (+/- 1.00)
FScore: 0.43 (+/- 0.80)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]
########## Metrics for {'NuSVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.47 (+/- 0.33)
Precision: 0.29 (+/- 0.72)
Recall: 0.37 (+/- 0.93)
FScore: 0.31 (+/- 0.76)
Pred_vs_Test: [([0, 0, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 0, 0], [0, 1, 1])]
########## Metrics for {'SVM': {'rbf': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'linear': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'SVM': {'sigmoid': []}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.42)
Precision: 0.67 (+/- 0.42)
Recall: 0.93 (+/- 0.50)
FScore: 0.77 (+/- 0.43)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'DT': {'gini': []}} classifier ##########
Accuracy: 0.64 (+/- 0.38)
Precision: 0.64 (+/- 0.38)
Recall: 0.93 (+/- 0.50)
FScore: 0.76 (+/- 0.42)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'DT': {'entropy': []}} classifier ##########
Accuracy: 0.53 (+/- 0.47)
Precision: 0.52 (+/- 0.53)
Recall: 0.77 (+/- 0.81)
FScore: 0.62 (+/- 0.64)
Pred_vs_Test: [([0, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

########## Configuration ##########
data_source  :  real_world
setup_chosen  :  all
mode  :  classification
data_mode  :  combined_data
selection  :  most important
approach  :  PCA+clf
clf  :  Assembly
kernels  :  ['linear', 'poly', 'rbf', 'sigmoid']
gammas  :  ['scale']
degrees  :  [1, 2, 3, 4, 5, 6]
neighbours  :  [1, 2, 3, 4, 5]
weights  :  ['uniform', 'distance']
classifier_combos  :  general
components  :  0.99
disaggregation algorithm  :  RF
Backend QtAgg is interactive backend. Turning interactive mode on.
Data estimated with NN used to generate malicious samples
mode: correct_vs_wrong
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_wrong of trafo_point_phase1 in setup A
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.50 (+/- 0.63)
Recall: 0.80 (+/- 0.80)
FScore: 0.60 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.53 (+/- 0.57)
Recall: 0.87 (+/- 0.68)
FScore: 0.64 (+/- 0.57)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.50 (+/- 0.52)
Recall: 0.87 (+/- 0.68)
FScore: 0.62 (+/- 0.54)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
mode: correct_vs_inversed
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_inversed of trafo_point_phase1 in setup A
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.70 (+/- 0.49)
Precision: 0.70 (+/- 0.49)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.33)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.57 (+/- 0.50)
Recall: 0.93 (+/- 0.50)
FScore: 0.69 (+/- 0.45)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.40 (+/- 0.40)
Recall: 0.80 (+/- 0.80)
FScore: 0.53 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
mode: correct_vs_abnormal
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_abnormal of trafo_point_phase1 in setup A
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.42)
Precision: 0.67 (+/- 0.42)
Recall: 0.93 (+/- 0.50)
FScore: 0.77 (+/- 0.43)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.73 (+/- 0.27)
Precision: 0.73 (+/- 0.27)
Recall: 1.00 (+/- 0.00)
FScore: 0.84 (+/- 0.16)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
Data estimated with LR used to generate malicious samples
mode: correct_vs_wrong
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_wrong of trafo_point_phase1 in setup A
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.50)
Precision: 0.50 (+/- 0.63)
Recall: 0.80 (+/- 0.80)
FScore: 0.60 (+/- 0.65)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.37)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.53 (+/- 0.57)
Recall: 0.87 (+/- 0.68)
FScore: 0.64 (+/- 0.57)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.50 (+/- 0.37)
Recall: 0.93 (+/- 0.50)
FScore: 0.64 (+/- 0.38)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.50 (+/- 0.52)
Recall: 0.87 (+/- 0.68)
FScore: 0.62 (+/- 0.54)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.50 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.67 (+/- 0.00)
Pred_vs_Test: [([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
mode: correct_vs_inversed
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_inversed of trafo_point_phase1 in setup A
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.70 (+/- 0.49)
Precision: 0.70 (+/- 0.49)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.33)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.57 (+/- 0.50)
Recall: 0.93 (+/- 0.50)
FScore: 0.69 (+/- 0.45)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.60 (+/- 0.40)
Precision: 0.60 (+/- 0.40)
Recall: 1.00 (+/- 0.00)
FScore: 0.73 (+/- 0.27)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.57 (+/- 0.34)
Precision: 0.57 (+/- 0.34)
Recall: 1.00 (+/- 0.00)
FScore: 0.71 (+/- 0.23)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.50 (+/- 0.00)
Precision: 0.40 (+/- 0.40)
Recall: 0.80 (+/- 0.80)
FScore: 0.53 (+/- 0.53)
Pred_vs_Test: [([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([0, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.53 (+/- 0.25)
Precision: 0.53 (+/- 0.25)
Recall: 1.00 (+/- 0.00)
FScore: 0.69 (+/- 0.17)
Pred_vs_Test: [([0, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.47 (+/- 0.25)
Precision: 0.47 (+/- 0.25)
Recall: 0.93 (+/- 0.50)
FScore: 0.62 (+/- 0.33)
Pred_vs_Test: [([1, 0], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1]), ([1, 1], [0, 1])]
mode: correct_vs_abnormal
Data loaded with sampling of None
Data loaded with sampling of None
Datasets of 15 combinations assembled
Dataset containing 15 combinations of 28 historic samples (14 correct and 14 corresponding wrong ones) for training and 2 testing samples (one correct one wrong) created
Results for correct_vs_abnormal of trafo_point_phase1 in setup A
########## Metrics for {'kNN': {1: ['uniform']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {1: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.42)
Precision: 0.67 (+/- 0.42)
Recall: 0.93 (+/- 0.50)
FScore: 0.77 (+/- 0.43)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 0, 0], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {2: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {3: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {3: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {4: ['uniform']}} classifier ##########
Accuracy: 0.73 (+/- 0.27)
Precision: 0.73 (+/- 0.27)
Recall: 1.00 (+/- 0.00)
FScore: 0.84 (+/- 0.16)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {4: ['distance']}} classifier ##########
Accuracy: 0.71 (+/- 0.23)
Precision: 0.71 (+/- 0.23)
Recall: 1.00 (+/- 0.00)
FScore: 0.83 (+/- 0.14)
Pred_vs_Test: [([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([0, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {5: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {5: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {6: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {6: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {7: ['uniform']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]
########## Metrics for {'kNN': {7: ['distance']}} classifier ##########
Accuracy: 0.67 (+/- 0.00)
Precision: 0.67 (+/- 0.00)
Recall: 1.00 (+/- 0.00)
FScore: 0.80 (+/- 0.00)
Pred_vs_Test: [([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1]), ([1, 1, 1], [0, 1, 1])]

